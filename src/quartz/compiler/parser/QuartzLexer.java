// Generated from D:/win/OneDrive/jg/iCode/Quartz/grammar\Quartz.g4 by ANTLR 4.6
package quartz.compiler.parser;

import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class QuartzLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.6", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, DMOD=55, STRING=56, CHAR=57, INT=58, DOUBLE=59, INLINE_C=60, 
		NAME=61, BLOCK_COMMENT=62, LINE_COMMENT=63, WHITESPACE=64;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "DMOD", "STRING", "CHAR", 
		"INT", "DOUBLE", "INLINE_C", "NAME", "BLOCK_COMMENT", "LINE_COMMENT", 
		"WHITESPACE"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'fn'", "'('", "')'", "':'", "'extern'", "','", "'='", "'struct'", 
		"'{'", "'}'", "'typealias'", "'import'", "'.'", "'return'", "'if'", "'else'", 
		"'while'", "'break'", "'continue'", "'+='", "'-='", "'*='", "'/='", "'%='", 
		"'&='", "'|='", "'^='", "'<'", "'>'", "'||'", "'|'", "'^'", "'&&'", "'&'", 
		"'=='", "'!='", "'>='", "'<='", "'+'", "'-'", "'*'", "'/'", "'%'", "'++'", 
		"'--'", "'!'", "'~'", "'sizeof'", "'const'", "'->'", "'...'", "'var'", 
		"'val'", "';'", "'%%'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "DMOD", "STRING", "CHAR", "INT", 
		"DOUBLE", "INLINE_C", "NAME", "BLOCK_COMMENT", "LINE_COMMENT", "WHITESPACE"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public QuartzLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Quartz.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2B\u0199\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3"+
		"\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n"+
		"\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r"+
		"\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3"+
		"\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3"+
		"\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3"+
		"\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3"+
		"\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3"+
		"\37\3 \3 \3!\3!\3\"\3\"\3\"\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3"+
		"\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\3\60\3\60\3\61"+
		"\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63"+
		"\3\63\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\67"+
		"\3\67\38\38\38\39\39\39\39\79\u0147\n9\f9\169\u014a\139\39\39\3:\3:\3"+
		":\3:\7:\u0152\n:\f:\16:\u0155\13:\3:\3:\3;\6;\u015a\n;\r;\16;\u015b\3"+
		"<\7<\u015f\n<\f<\16<\u0162\13<\3<\3<\6<\u0166\n<\r<\16<\u0167\3=\3=\7"+
		"=\u016c\n=\f=\16=\u016f\13=\3=\3=\3>\3>\7>\u0175\n>\f>\16>\u0178\13>\3"+
		"?\3?\3?\3?\7?\u017e\n?\f?\16?\u0181\13?\3?\3?\3?\3?\3?\3@\3@\3@\3@\7@"+
		"\u018c\n@\f@\16@\u018f\13@\3@\3@\3A\6A\u0194\nA\rA\16A\u0195\3A\3A\6\u0148"+
		"\u0153\u016d\u017f\2B\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27"+
		"\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63"+
		"e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\3\2\7\3\2\62;\5\2C\\aa"+
		"c|\6\2\62;C\\aac|\4\2\f\f\17\17\5\2\13\f\17\17\"\"\u01a4\2\3\3\2\2\2\2"+
		"\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2"+
		"\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2"+
		"\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2"+
		"\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2"+
		"\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2"+
		"\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2"+
		"K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3"+
		"\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2"+
		"\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2"+
		"q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3"+
		"\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\3\u0083\3\2\2\2\5\u0086\3\2\2\2\7"+
		"\u0088\3\2\2\2\t\u008a\3\2\2\2\13\u008c\3\2\2\2\r\u0093\3\2\2\2\17\u0095"+
		"\3\2\2\2\21\u0097\3\2\2\2\23\u009e\3\2\2\2\25\u00a0\3\2\2\2\27\u00a2\3"+
		"\2\2\2\31\u00ac\3\2\2\2\33\u00b3\3\2\2\2\35\u00b5\3\2\2\2\37\u00bc\3\2"+
		"\2\2!\u00bf\3\2\2\2#\u00c4\3\2\2\2%\u00ca\3\2\2\2\'\u00d0\3\2\2\2)\u00d9"+
		"\3\2\2\2+\u00dc\3\2\2\2-\u00df\3\2\2\2/\u00e2\3\2\2\2\61\u00e5\3\2\2\2"+
		"\63\u00e8\3\2\2\2\65\u00eb\3\2\2\2\67\u00ee\3\2\2\29\u00f1\3\2\2\2;\u00f3"+
		"\3\2\2\2=\u00f5\3\2\2\2?\u00f8\3\2\2\2A\u00fa\3\2\2\2C\u00fc\3\2\2\2E"+
		"\u00ff\3\2\2\2G\u0101\3\2\2\2I\u0104\3\2\2\2K\u0107\3\2\2\2M\u010a\3\2"+
		"\2\2O\u010d\3\2\2\2Q\u010f\3\2\2\2S\u0111\3\2\2\2U\u0113\3\2\2\2W\u0115"+
		"\3\2\2\2Y\u0117\3\2\2\2[\u011a\3\2\2\2]\u011d\3\2\2\2_\u011f\3\2\2\2a"+
		"\u0121\3\2\2\2c\u0128\3\2\2\2e\u012e\3\2\2\2g\u0131\3\2\2\2i\u0135\3\2"+
		"\2\2k\u0139\3\2\2\2m\u013d\3\2\2\2o\u013f\3\2\2\2q\u0142\3\2\2\2s\u014d"+
		"\3\2\2\2u\u0159\3\2\2\2w\u0160\3\2\2\2y\u0169\3\2\2\2{\u0172\3\2\2\2}"+
		"\u0179\3\2\2\2\177\u0187\3\2\2\2\u0081\u0193\3\2\2\2\u0083\u0084\7h\2"+
		"\2\u0084\u0085\7p\2\2\u0085\4\3\2\2\2\u0086\u0087\7*\2\2\u0087\6\3\2\2"+
		"\2\u0088\u0089\7+\2\2\u0089\b\3\2\2\2\u008a\u008b\7<\2\2\u008b\n\3\2\2"+
		"\2\u008c\u008d\7g\2\2\u008d\u008e\7z\2\2\u008e\u008f\7v\2\2\u008f\u0090"+
		"\7g\2\2\u0090\u0091\7t\2\2\u0091\u0092\7p\2\2\u0092\f\3\2\2\2\u0093\u0094"+
		"\7.\2\2\u0094\16\3\2\2\2\u0095\u0096\7?\2\2\u0096\20\3\2\2\2\u0097\u0098"+
		"\7u\2\2\u0098\u0099\7v\2\2\u0099\u009a\7t\2\2\u009a\u009b\7w\2\2\u009b"+
		"\u009c\7e\2\2\u009c\u009d\7v\2\2\u009d\22\3\2\2\2\u009e\u009f\7}\2\2\u009f"+
		"\24\3\2\2\2\u00a0\u00a1\7\177\2\2\u00a1\26\3\2\2\2\u00a2\u00a3\7v\2\2"+
		"\u00a3\u00a4\7{\2\2\u00a4\u00a5\7r\2\2\u00a5\u00a6\7g\2\2\u00a6\u00a7"+
		"\7c\2\2\u00a7\u00a8\7n\2\2\u00a8\u00a9\7k\2\2\u00a9\u00aa\7c\2\2\u00aa"+
		"\u00ab\7u\2\2\u00ab\30\3\2\2\2\u00ac\u00ad\7k\2\2\u00ad\u00ae\7o\2\2\u00ae"+
		"\u00af\7r\2\2\u00af\u00b0\7q\2\2\u00b0\u00b1\7t\2\2\u00b1\u00b2\7v\2\2"+
		"\u00b2\32\3\2\2\2\u00b3\u00b4\7\60\2\2\u00b4\34\3\2\2\2\u00b5\u00b6\7"+
		"t\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7v\2\2\u00b8\u00b9\7w\2\2\u00b9\u00ba"+
		"\7t\2\2\u00ba\u00bb\7p\2\2\u00bb\36\3\2\2\2\u00bc\u00bd\7k\2\2\u00bd\u00be"+
		"\7h\2\2\u00be \3\2\2\2\u00bf\u00c0\7g\2\2\u00c0\u00c1\7n\2\2\u00c1\u00c2"+
		"\7u\2\2\u00c2\u00c3\7g\2\2\u00c3\"\3\2\2\2\u00c4\u00c5\7y\2\2\u00c5\u00c6"+
		"\7j\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7n\2\2\u00c8\u00c9\7g\2\2\u00c9"+
		"$\3\2\2\2\u00ca\u00cb\7d\2\2\u00cb\u00cc\7t\2\2\u00cc\u00cd\7g\2\2\u00cd"+
		"\u00ce\7c\2\2\u00ce\u00cf\7m\2\2\u00cf&\3\2\2\2\u00d0\u00d1\7e\2\2\u00d1"+
		"\u00d2\7q\2\2\u00d2\u00d3\7p\2\2\u00d3\u00d4\7v\2\2\u00d4\u00d5\7k\2\2"+
		"\u00d5\u00d6\7p\2\2\u00d6\u00d7\7w\2\2\u00d7\u00d8\7g\2\2\u00d8(\3\2\2"+
		"\2\u00d9\u00da\7-\2\2\u00da\u00db\7?\2\2\u00db*\3\2\2\2\u00dc\u00dd\7"+
		"/\2\2\u00dd\u00de\7?\2\2\u00de,\3\2\2\2\u00df\u00e0\7,\2\2\u00e0\u00e1"+
		"\7?\2\2\u00e1.\3\2\2\2\u00e2\u00e3\7\61\2\2\u00e3\u00e4\7?\2\2\u00e4\60"+
		"\3\2\2\2\u00e5\u00e6\7\'\2\2\u00e6\u00e7\7?\2\2\u00e7\62\3\2\2\2\u00e8"+
		"\u00e9\7(\2\2\u00e9\u00ea\7?\2\2\u00ea\64\3\2\2\2\u00eb\u00ec\7~\2\2\u00ec"+
		"\u00ed\7?\2\2\u00ed\66\3\2\2\2\u00ee\u00ef\7`\2\2\u00ef\u00f0\7?\2\2\u00f0"+
		"8\3\2\2\2\u00f1\u00f2\7>\2\2\u00f2:\3\2\2\2\u00f3\u00f4\7@\2\2\u00f4<"+
		"\3\2\2\2\u00f5\u00f6\7~\2\2\u00f6\u00f7\7~\2\2\u00f7>\3\2\2\2\u00f8\u00f9"+
		"\7~\2\2\u00f9@\3\2\2\2\u00fa\u00fb\7`\2\2\u00fbB\3\2\2\2\u00fc\u00fd\7"+
		"(\2\2\u00fd\u00fe\7(\2\2\u00feD\3\2\2\2\u00ff\u0100\7(\2\2\u0100F\3\2"+
		"\2\2\u0101\u0102\7?\2\2\u0102\u0103\7?\2\2\u0103H\3\2\2\2\u0104\u0105"+
		"\7#\2\2\u0105\u0106\7?\2\2\u0106J\3\2\2\2\u0107\u0108\7@\2\2\u0108\u0109"+
		"\7?\2\2\u0109L\3\2\2\2\u010a\u010b\7>\2\2\u010b\u010c\7?\2\2\u010cN\3"+
		"\2\2\2\u010d\u010e\7-\2\2\u010eP\3\2\2\2\u010f\u0110\7/\2\2\u0110R\3\2"+
		"\2\2\u0111\u0112\7,\2\2\u0112T\3\2\2\2\u0113\u0114\7\61\2\2\u0114V\3\2"+
		"\2\2\u0115\u0116\7\'\2\2\u0116X\3\2\2\2\u0117\u0118\7-\2\2\u0118\u0119"+
		"\7-\2\2\u0119Z\3\2\2\2\u011a\u011b\7/\2\2\u011b\u011c\7/\2\2\u011c\\\3"+
		"\2\2\2\u011d\u011e\7#\2\2\u011e^\3\2\2\2\u011f\u0120\7\u0080\2\2\u0120"+
		"`\3\2\2\2\u0121\u0122\7u\2\2\u0122\u0123\7k\2\2\u0123\u0124\7|\2\2\u0124"+
		"\u0125\7g\2\2\u0125\u0126\7q\2\2\u0126\u0127\7h\2\2\u0127b\3\2\2\2\u0128"+
		"\u0129\7e\2\2\u0129\u012a\7q\2\2\u012a\u012b\7p\2\2\u012b\u012c\7u\2\2"+
		"\u012c\u012d\7v\2\2\u012dd\3\2\2\2\u012e\u012f\7/\2\2\u012f\u0130\7@\2"+
		"\2\u0130f\3\2\2\2\u0131\u0132\7\60\2\2\u0132\u0133\7\60\2\2\u0133\u0134"+
		"\7\60\2\2\u0134h\3\2\2\2\u0135\u0136\7x\2\2\u0136\u0137\7c\2\2\u0137\u0138"+
		"\7t\2\2\u0138j\3\2\2\2\u0139\u013a\7x\2\2\u013a\u013b\7c\2\2\u013b\u013c"+
		"\7n\2\2\u013cl\3\2\2\2\u013d\u013e\7=\2\2\u013en\3\2\2\2\u013f\u0140\7"+
		"\'\2\2\u0140\u0141\7\'\2\2\u0141p\3\2\2\2\u0142\u0148\7$\2\2\u0143\u0144"+
		"\7^\2\2\u0144\u0147\13\2\2\2\u0145\u0147\13\2\2\2\u0146\u0143\3\2\2\2"+
		"\u0146\u0145\3\2\2\2\u0147\u014a\3\2\2\2\u0148\u0149\3\2\2\2\u0148\u0146"+
		"\3\2\2\2\u0149\u014b\3\2\2\2\u014a\u0148\3\2\2\2\u014b\u014c\7$\2\2\u014c"+
		"r\3\2\2\2\u014d\u0153\7)\2\2\u014e\u014f\7^\2\2\u014f\u0152\13\2\2\2\u0150"+
		"\u0152\13\2\2\2\u0151\u014e\3\2\2\2\u0151\u0150\3\2\2\2\u0152\u0155\3"+
		"\2\2\2\u0153\u0154\3\2\2\2\u0153\u0151\3\2\2\2\u0154\u0156\3\2\2\2\u0155"+
		"\u0153\3\2\2\2\u0156\u0157\7)\2\2\u0157t\3\2\2\2\u0158\u015a\t\2\2\2\u0159"+
		"\u0158\3\2\2\2\u015a\u015b\3\2\2\2\u015b\u0159\3\2\2\2\u015b\u015c\3\2"+
		"\2\2\u015cv\3\2\2\2\u015d\u015f\t\2\2\2\u015e\u015d\3\2\2\2\u015f\u0162"+
		"\3\2\2\2\u0160\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161\u0163\3\2\2\2\u0162"+
		"\u0160\3\2\2\2\u0163\u0165\7\60\2\2\u0164\u0166\t\2\2\2\u0165\u0164\3"+
		"\2\2\2\u0166\u0167\3\2\2\2\u0167\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168"+
		"x\3\2\2\2\u0169\u016d\5o8\2\u016a\u016c\13\2\2\2\u016b\u016a\3\2\2\2\u016c"+
		"\u016f\3\2\2\2\u016d\u016e\3\2\2\2\u016d\u016b\3\2\2\2\u016e\u0170\3\2"+
		"\2\2\u016f\u016d\3\2\2\2\u0170\u0171\5o8\2\u0171z\3\2\2\2\u0172\u0176"+
		"\t\3\2\2\u0173\u0175\t\4\2\2\u0174\u0173\3\2\2\2\u0175\u0178\3\2\2\2\u0176"+
		"\u0174\3\2\2\2\u0176\u0177\3\2\2\2\u0177|\3\2\2\2\u0178\u0176\3\2\2\2"+
		"\u0179\u017a\7\61\2\2\u017a\u017b\7,\2\2\u017b\u017f\3\2\2\2\u017c\u017e"+
		"\13\2\2\2\u017d\u017c\3\2\2\2\u017e\u0181\3\2\2\2\u017f\u0180\3\2\2\2"+
		"\u017f\u017d\3\2\2\2\u0180\u0182\3\2\2\2\u0181\u017f\3\2\2\2\u0182\u0183"+
		"\7,\2\2\u0183\u0184\7\61\2\2\u0184\u0185\3\2\2\2\u0185\u0186\b?\2\2\u0186"+
		"~\3\2\2\2\u0187\u0188\7\61\2\2\u0188\u0189\7\61\2\2\u0189\u018d\3\2\2"+
		"\2\u018a\u018c\n\5\2\2\u018b\u018a\3\2\2\2\u018c\u018f\3\2\2\2\u018d\u018b"+
		"\3\2\2\2\u018d\u018e\3\2\2\2\u018e\u0190\3\2\2\2\u018f\u018d\3\2\2\2\u0190"+
		"\u0191\b@\2\2\u0191\u0080\3\2\2\2\u0192\u0194\t\6\2\2\u0193\u0192\3\2"+
		"\2\2\u0194\u0195\3\2\2\2\u0195\u0193\3\2\2\2\u0195\u0196\3\2\2\2\u0196"+
		"\u0197\3\2\2\2\u0197\u0198\bA\2\2\u0198\u0082\3\2\2\2\17\2\u0146\u0148"+
		"\u0151\u0153\u015b\u0160\u0167\u016d\u0176\u017f\u018d\u0195\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}