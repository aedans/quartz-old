Found main(): int

Found val added = add(1: int, 2: int)
Found val subtracted = sub(2: int, 1: int)
Found val multiplied = mlt(added, subtracted)
Found val divided = div(subtracted, added)
Found return(0: int)
Found add(double d1, double d2): void

Found sub(double d1, double d2): void

Found mlt(double d1, double d2): void

Found div(double d1, double d2): void


main(): int
|   val added = add(1: int, 2: int)
|   val subtracted = sub(2: int, 1: int)
|   val multiplied = mlt(added, subtracted)
|   val divided = div(subtracted, added)
|   return(0: int)

add(double d1, double d2): void
|   InlineCNode

sub(double d1, double d2): void
|   InlineCNode

mlt(double d1, double d2): void
|   InlineCNode

div(double d1, double d2): void
|   InlineCNode


